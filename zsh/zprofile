# custom config for aki setup
export PATH=$PATH:/usr/local/go/bin
export PATH=$PATH:$(go env GOPATH)/bin
export XDG_CONFIG_HOME=/home/aki/.config

export NVM_DIR="$HOME/.config/nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion


alias inflate='ruby -r zlib -e "STDOUT.write Zlib::Inflate.inflate(STDIN.read)"'

alias tmls='tmux ls'
alias tmk='tmux kill-server'

function tma {
    name=$1
    result=${PWD##*/}          # to assign to a variable
    result=${result:-/}        # to correct for the case where PWD=/
    # Check if the session exists, discarding output
    # We can check $? for the exit status (zero for success, non-zero for failure)
    tmux has-session -t $name 2>/dev/null

    if [ $? != 0 ]; then
      # Set up your session 
        tmux new -A -s $name -n $result
    else
        tmux select-window -t $name:$result 2>/dev/null || (tmux new-window -n $result -t $name && tmux select-window -t $name:$result)
        tmux a -t $name 
    fi
}

alias dev='tma dev'
alias stg='tma stg'
alias prd='tma prd'

alias cat='batcat'
